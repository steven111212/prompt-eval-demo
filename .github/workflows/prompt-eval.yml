name: 'Prompt Evaluation'

on:
  pull_request:
    paths:
      - 'rag_provider.py'
      - 'rag_context_loader.py'
      - 'question.csv'
      - 'prompts/**'
      - 'promptfooconfig.yaml'

jobs:
  evaluate:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install langchain langchain-openai chromadb

      - name: Build vector DB (Chroma)
        run: |
          python ingest.py
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Run and share promptfoo eval
        id: eval
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPTFOO_API_KEY: ${{ secrets.PROMPTFOO_API_KEY }}
        run: |
          eval_output=$(promptfoo eval \
            -c promptfooconfig.yaml \
            --share \
            --output output.json)

          echo "$eval_output"
          echo "share_url=$(echo "$eval_output" | grep -o 'https://www\.promptfoo\.app/eval/[^ ]*')" >> $GITHUB_OUTPUT



      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const output = JSON.parse(fs.readFileSync('output.json', 'utf8'));
            const shareUrl = `${{ steps.eval.outputs.share_url }}`;

            const body = `⚠️ LLM prompt was modified.\n\n| Success | Failure |\n|---------|---------|\n| ${output.results.stats.successes}      | ${output.results.stats.failures}       |\n\n**» [View eval results](${shareUrl}) «**`;

            if (context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              console.warn('No PR number found; skipping comment.');
            }
